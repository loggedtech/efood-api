generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address {
  id         String  @id @default(uuid()) @db.Uuid
  zip        String
  street     String
  number     String  @db.VarChar(10)
  complement String? @db.VarChar(60)
  district   String
  city       String
  state      String  @db.Char(2)
  country    String  @db.Char(3)

  restaurants Restaurant[]

  @@map("addresses")
}

model Restaurant {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @db.VarChar(60)
  imageUrl  String?  @map("image_url")
  taxId     String   @map("tax_id") @db.VarChar(18)
  phone     String   @db.Char(11)
  addressId String   @map("address_id") @db.Uuid
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  address Address  @relation(fields: [addressId], references: [id])
  users   Member[]

  @@map("restaurants")
}

enum Role {
  ADMINISTRATOR
  MANAGER
  SEPARATOR
  PREPARER
  MANIPULATOR
  DELIVERYMAN
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @db.VarChar(60)
  email     String
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  active    Boolean  @default(false)

  restaurants Member[]

  @@map("users")
}

model Member {
  id           Int    @id @default(autoincrement())
  restaurantId String @map("restaurant_id") @db.Uuid
  userId       String @map("user_id") @db.Uuid
  role         Role   @default(PREPARER)

  restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  user       User       @relation(fields: [userId], references: [id])

  @@map("members")
}
